dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1",
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.5,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
dev.off()
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1",
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.0,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
dir.create("Figuras")
tiff("./Figuras/Heatmap.tiff", res = 200, width = 4.5, height = 4, units = 'in')
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1",
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.0,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
dir.create("Figuras")
tiff("./Figuras/Heatmap.tiff", res = 200, width = 4.5, height = 4, units = 'in')
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1", cex.main = 0.8,
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.0,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1", cex.main = 0.8,
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.5,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
dir.create("Figuras")
tiff("./Figuras/Heatmap.tiff", res = 200, width = 4.5, height = 4, units = 'in')
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1", cex.main = 0.8,
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.5,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
dev.off()
jpeg("heatmap.jpeg")
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1", cex.main = 0.8,
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.5,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
dev.off()
png("heatmap.png")
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1", cex.main = 0.8,
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.5,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
dev.off()
library(AnnotationDbi)
library(clusterProfiler)
ListaDatos.pec <- ListaSeleccionados.pec[1:3]
comparisonsNames <- names(ListaDatos.pec)
universe <- mapped_genes
for (i in 1:length(ListaDatos.pec)){
genesIn <- ListaDatos.pec[[i]]
comparison <- comparisonsNames[i]
enrich.result <- enrichGO(gene = genesIn, OrgDb = "org.EcK12.eg.db", ont = "ALL", pAdjustMethod ="BH", pvalueCutoff = 0.05, readable = TRUE)
cat("##################################")
cat("\nComparison: ", comparison,"\n")
print(head(enrich.result))
if (length(rownames(enrich.result@result)) != 0) {
write.csv(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".csv"),
row.names = FALSE)
pdf(file=paste0("./Resultados/","Enrich.Barplot.",comparison,".pdf"))
print(barplot(enrich.result, showCategory = 15, font.size = 6,
title = paste0("EnrichGO Pathway Analysis for ", comparison,". Barplot")))
dev.off()
pdf(file = paste0("./Resultados/","EnrichGOcnetplot.",comparison,".pdf"))
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
}
}
BiocManager::install("AnnotationDbi")
BiocManager::install("clusterProfiler")
ListaTablas.pec <- list(nt.WTvsFUR  = tt_nt.WTvsFUR, WT.ntvsCPR = tt_WT.ntvsCPR, FUR.ntvsCPR = tt_FUR.ntvsCPR)
ListaSeleccionados.pec <- list()
for (i in 1:length(ListaTablas.pec)){
# select the toptable
topTab <- ListaTablas.pec[[i]]
# select the genes to be included in the analysis
whichGenes<-topTab["adj.P.Val"]<0.1
selectedIDs <- rownames(topTab)[whichGenes]
# convert the ID to Entrez
EntrezIDs<- select(ecoli2.db, selectedIDs, c("ENTREZID"))
EntrezIDs <- EntrezIDs$ENTREZID
ListaSeleccionados.pec[[i]] <- EntrezIDs
names(ListaSeleccionados.pec)[i] <- names(ListaTablas.pec)[i]
}
ListaTablas.pec <- list(nt.WTvsFUR  = tt_nt.WTvsFUR, WT.ntvsCPR = tt_WT.ntvsCPR, FUR.ntvsCPR = tt_FUR.ntvsCPR)
ListaSeleccionados.pec <- list()
for (i in 1:length(ListaTablas.pec)){
# select the toptable
topTab <- ListaTablas.pec[[i]]
# select the genes to be included in the analysis
whichGenes<-topTab["adj.P.Val"]<0.1
selectedIDs <- rownames(topTab)[whichGenes]
# convert the ID to Entrez
EntrezIDs<- select(ecoli2.db, selectedIDs, c("ENTREZID"))
EntrezIDs <- EntrezIDs$ENTREZID
ListaSeleccionados.pec[[i]] <- EntrezIDs
names(ListaSeleccionados.pec)[i] <- names(ListaTablas.pec)[i]
}
library(dplyr)
library(dplyr)
ListaTablas.pec <- list(nt.WTvsFUR  = tt_nt.WTvsFUR, WT.ntvsCPR = tt_WT.ntvsCPR, FUR.ntvsCPR = tt_FUR.ntvsCPR)
ListaSeleccionados.pec <- list()
for (i in 1:length(ListaTablas.pec)){
# select the toptable
topTab <- ListaTablas.pec[[i]]
# select the genes to be included in the analysis
whichGenes<-topTab["adj.P.Val"]<0.1
selectedIDs <- rownames(topTab)[whichGenes]
# convert the ID to Entrez
EntrezIDs<- select(ecoli2.db, selectedIDs, c("ENTREZID"))
EntrezIDs <- EntrezIDs$ENTREZID
ListaSeleccionados.pec[[i]] <- EntrezIDs
names(ListaSeleccionados.pec)[i] <- names(ListaTablas.pec)[i]
}
png("heatmap.png")
heatmap.2(DatosHM,
Rowv = TRUE,
Colv = TRUE,
dendrogram = "both",
main = "Differentially expressed genes \n FDR < 0,1, logFC >=1", cex.main = 0.8,
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.5,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
srtCol = 30)
targets.pec <- read.csv2("./Datos/targets.csv", header = TRUE, sep = ";")
knitr::kable(targets.pec, booktabs = TRUE, caption = "Contenido del archivo targets usado para este an치lisis")
library(oligo)
archivosCEL <- list.celfiles("./Datos", full.names = TRUE)
library(Biobase)
mis.targets <- read.AnnotatedDataFrame(file.path("./Datos", "targets.csv"), header = TRUE, row.names = 1, sep=";")
rawData <- read.celfiles(archivosCEL, phenoData = mis.targets)
mis.targets@data$ShortName -> rownames(pData(rawData))
colnames(rawData) <- rownames(pData(rawData))
head(rawData)
library(arrayQualityMetrics)
library(ggplot2)
library(ggrepel)
plotPCA3 <- function (datos, labels, factor, title, scale, colores, size = 1.5, glineas = 0.25) {
data <- prcomp(t(datos),scale=scale)
dataDf <- data.frame(data$x)
Group <- factor
loads <- round(data$sdev^2/sum(data$sdev^2)*100,1)
p1 <- ggplot(dataDf,aes(x=PC1, y=PC2)) +
theme_classic() +
geom_hline(yintercept = 0, color = "gray70") +
geom_vline(xintercept = 0, color = "gray70") +
geom_point(aes(color = Group), alpha = 0.55, size = 3) +
coord_cartesian(xlim = c(min(data$x[,1])-5,max(data$x[,1])+5)) +
scale_fill_discrete(name = "Group")
p1 + geom_text_repel(aes(y = PC2 + 0.25, label = labels),segment.size = 0.25, size = size) +
labs(x = c(paste("PC1",loads[1],"%")),y=c(paste("PC2",loads[2],"%"))) +
ggtitle(paste("An치lisis de componentes principales para:",title,sep=" "))+
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values=colores)
}
plotPCA3(exprs(rawData), labels = targets.pec$ShortName, factor = targets.pec$Group,
title="Datos crudos", scale = FALSE, size = 3.5,
colores = c("darkred", "salmon", "darkgreen", "springgreen2"))
dir.create("Figuras")
tiff("./Figuras/PCA_RawData.tiff", res = 200, width = 4.5, height = 4, units = 'in')
plotPCA3(exprs(rawData), labels = targets.pec$ShortName, factor = targets.pec$Group,
title="Raw data", scale = FALSE, size = 2,
colores = c("darkred", "salmon", "darkgreen", "springgreen2"))
dev.off()
boxplot(rawData, cex.axis=0.7, las=2, which="all", col = c(rep("springgreen2", 2), rep("darkgreen", 2), rep("salmon", 2), rep("darkred", 2)), main = "Distribuci칩n de los valores de intensidad de los datos crudos", cex.main = 0.8)
eset_rma.pec <- rma(rawData)
arrayQualityMetrics(eset_rma.pec, outdir = file.path("./Resultados", "QCDir.Norm"), force = TRUE)
plotPCA3(exprs(eset_rma.pec), labels = targets.pec$ShortName, factor = targets.pec$Group,
title="Datos normalizados", scale = FALSE, size = 3.5,
colores = c("darkred", "salmon", "darkgreen", "springgreen"))
library(pvca)
pData(eset_rma.pec) <- targets.pec
pct_threshold <- 0.6
batch.factors <- c("Genotype", "Treatment")
pvcaObj <- pvcaBatchAssess(eset_rma.pec, batch.factors, pct_threshold)
bp <- barplot(pvcaObj$dat, xlab = "Efectos", ylab = "Variaci칩n de la proporci칩n promedia ponderada", ylim = c(0,1.1), col=c("deepskyblue3"), las=2, main="Estimaci칩n PVCA", xlim = c(0,8), cex.main = 1.1, cex.lab = 0.9)
axis(1, at = bp, labels = pvcaObj$label, cex.axis = 0.8, las=2)
values = pvcaObj$dat
new_values = round(values, 3)
text(bp, pvcaObj$dat, labels = new_values, pos =3, cex = 0.9)
sds <- apply(exprs(eset_rma.pec), 1, sd)
sds0 <- sort(sds)
plot(1:length(sds0), sds0, main="Distribuci칩n de la variabilidad de todos los genes", sub="Linias verticales representan los percentiles 90 y 95%", xlab= "칈ndice de genes (del menos al m치s variable)", ylab="Desviaci칩n est치ndar", col ="deepskyblue4", cex.main = 1, cex.lab = 0.9)
abline(v=length(sds)*c(0.9,0.95))
library(genefilter)
library(ecoli2.db)
library(dplyr)
ListaTablas.pec <- list(nt.WTvsFUR  = tt_nt.WTvsFUR, WT.ntvsCPR = tt_WT.ntvsCPR, FUR.ntvsCPR = tt_FUR.ntvsCPR)
ListaSeleccionados.pec <- list()
for (i in 1:length(ListaTablas.pec)){
# select the toptable
topTab <- ListaTablas.pec[[i]]
# select the genes to be included in the analysis
whichGenes<-topTab["adj.P.Val"]<0.1
selectedIDs <- rownames(topTab)[whichGenes]
# convert the ID to Entrez
EntrezIDs<- select(ecoli2.db, selectedIDs, c("ENTREZID"))
EntrezIDs <- EntrezIDs$ENTREZID
ListaSeleccionados.pec[[i]] <- EntrezIDs
names(ListaSeleccionados.pec)[i] <- names(ListaTablas.pec)[i]
}
sapply(ListaSeleccionados.pec, length)
library(dplyr)
ListaTablas.pec <- list(nt.WTvsFUR  = tt_nt.WTvsFUR, WT.ntvsCPR = tt_WT.ntvsCPR, FUR.ntvsCPR = tt_FUR.ntvsCPR)
ListaSeleccionados.pec <- list()
for (i in 1:length(ListaTablas.pec)){
# select the toptable
topTab <- ListaTablas.pec[[i]]
# select the genes to be included in the analysis
whichGenes<-topTab["adj.P.Val"]<0.15
selectedIDs <- rownames(topTab)[whichGenes]
# convert the ID to Entrez
EntrezIDs<- select(ecoli2.db, selectedIDs, c("ENTREZID"))
EntrezIDs <- EntrezIDs$ENTREZID
ListaSeleccionados.pec[[i]] <- EntrezIDs
names(ListaSeleccionados.pec)[i] <- names(ListaTablas.pec)[i]
}
sapply(ListaSeleccionados.pec, length)
library(AnnotationDbi)
library(clusterProfiler)
library(igraph)
ListaDatos.pec <- ListaSeleccionados.pec[1:3]
comparisonsNames <- names(ListaDatos.pec)
universe <- mapped_genes
for (i in 1:length(ListaDatos.pec)){
genesIn <- ListaDatos.pec[[i]]
comparison <- comparisonsNames[i]
enrich.result <- enrichGO(gene = genesIn, OrgDb = "org.EcK12.eg.db", ont = "ALL", pAdjustMethod ="BH", pvalueCutoff = 0.05, readable = TRUE)
cat("##################################")
cat("\nComparison: ", comparison,"\n")
print(head(enrich.result))
if (length(rownames(enrich.result@result)) != 0) {
write.csv(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".csv"),
row.names = FALSE)
pdf(file=paste0("./Resultados/","Enrich.Barplot.",comparison,".pdf"))
print(barplot(enrich.result, showCategory = 15, font.size = 6,
title = paste0("EnrichGO Pathway Analysis for ", comparison,". Barplot")))
dev.off()
pdf(file = paste0("./Resultados/","EnrichGOcnetplot.",comparison,".pdf"))
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
}
}
write.xlsx(Enrich.Result.nt.WTvsFUR, file = "Enrich.Result.nt.WTvsFUR.xlsx")
library(xlsx)
write.xlsx(Enrich.Result.nt.WTvsFUR, file = "Enrich.Result.nt.WTvsFUR.xlsx")
library(xlsx)
write.xlsx(if (length(rownames(enrich.result@result)) != 0) {
write.csv(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".xlsx"),
row.names = FALSE))
library(xlsx)
write.xlsx(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".xlsx"),
row.names = FALSE))
library(xlsx)
write.xlsx(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".xlsx"),
row.names = FALSE)
library(AnnotationDbi)
library(clusterProfiler)
library(igraph)
ListaDatos.pec <- ListaSeleccionados.pec[1:3]
comparisonsNames <- names(ListaDatos.pec)
universe <- mapped_genes
for (i in 1:length(ListaDatos.pec)){
genesIn <- ListaDatos.pec[[i]]
comparison <- comparisonsNames[i]
enrich.result <- enrichGO(gene = genesIn, OrgDb = "org.EcK12.eg.db", ont = "ALL", pAdjustMethod ="BH", pvalueCutoff = 0.05, readable = TRUE)
cat("##################################")
cat("\nComparison: ", comparison,"\n")
print(head(enrich.result))
if (length(rownames(enrich.result@result)) != 0) {
write.csv(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".csv"),
row.names = FALSE)
write.xlsx(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".xlsx"),
row.names = FALSE)
pdf(file=paste0("./Resultados/","Enrich.Barplot.",comparison,".pdf"))
print(barplot(enrich.result, showCategory = 15, font.size = 6,
title = paste0("EnrichGO Pathway Analysis for ", comparison,". Barplot")))
dev.off()
pdf(file = paste0("./Resultados/","EnrichGOcnetplot.",comparison,".pdf"))
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
}
}
library(AnnotationDbi)
library(clusterProfiler)
library(igraph)
ListaDatos.pec <- ListaSeleccionados.pec[1:3]
comparisonsNames <- names(ListaDatos.pec)
universe <- mapped_genes
for (i in 1:length(ListaDatos.pec)){
genesIn <- ListaDatos.pec[[i]]
comparison <- comparisonsNames[i]
enrich.result <- enrichGO(gene = genesIn, OrgDb = "org.EcK12.eg.db", ont = "ALL", pAdjustMethod ="BH", pvalueCutoff = 0.05, readable = TRUE)
cat("##################################")
cat("\nComparison: ", comparison,"\n")
print(head(enrich.result))
if (length(rownames(enrich.result@result)) != 0) {
write.csv(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".csv"),
row.names = FALSE)
write.xlsx(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".xlsx"),
row.names = FALSE)
pdf(file=paste0("./Resultados/","Enrich.Barplot.",comparison,".pdf"))
print(barplot(enrich.result, showCategory = 15, font.size = 6,
title = paste0("EnrichGO Pathway Analysis for ", comparison,". Barplot")))
dev.off()
pdf(file = paste0("./Resultados/","EnrichGOcnetplot.",comparison,".pdf"))
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
}
}
library(dplyr)
ListaTablas.pec <- list(nt.WTvsFUR  = tt_nt.WTvsFUR, WT.ntvsCPR = tt_WT.ntvsCPR, FUR.ntvsCPR = tt_FUR.ntvsCPR)
ListaSeleccionados.pec <- list()
for (i in 1:length(ListaTablas.pec)){
# select the toptable
topTab <- ListaTablas.pec[[i]]
# select the genes to be included in the analysis
whichGenes<-topTab["adj.P.Val"]<0.15
selectedIDs <- rownames(topTab)[whichGenes]
# convert the ID to Entrez
EntrezIDs<- select(ecoli2.db, selectedIDs, c("ENTREZID"))
EntrezIDs <- EntrezIDs$ENTREZID
ListaSeleccionados.pec[[i]] <- EntrezIDs
names(ListaSeleccionados.pec)[i] <- names(ListaTablas.pec)[i]
}
library(AnnotationDbi)
library(clusterProfiler)
library(igraph)
ListaDatos.pec <- ListaSeleccionados.pec[1:3]
comparisonsNames <- names(ListaDatos.pec)
universe <- mapped_genes
for (i in 1:length(ListaDatos.pec)){
genesIn <- ListaDatos.pec[[i]]
comparison <- comparisonsNames[i]
enrich.result <- enrichGO(gene = genesIn, OrgDb = "org.EcK12.eg.db", ont = "ALL", pAdjustMethod ="BH", pvalueCutoff = 0.05, readable = TRUE)
cat("##################################")
cat("\nComparison: ", comparison,"\n")
print(head(enrich.result))
if (length(rownames(enrich.result@result)) != 0) {
write.csv(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".csv"),
row.names = FALSE)
write.xlsx(as.data.frame(enrich.result),
file =paste0("./Resultados/","Enrich.Results.",comparison,".xlsx"),
row.names = FALSE)
pdf(file=paste0("./Resultados/","Enrich.Barplot.",comparison,".pdf"))
print(barplot(enrich.result, showCategory = 15, font.size = 6,
title = paste0("EnrichGO Pathway Analysis for ", comparison,". Barplot")))
dev.off()
pdf(file = paste0("./Resultados/","EnrichGOcnetplot.",comparison,".pdf"))
print(cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75))
dev.off()
}
}
cnetplot(enrich.result, categorySize = "geneNum", schowCategory = 15,
vertex.label.cex = 0.75)
plotPCA3(exprs(rawData), labels = targets.pec$ShortName, factor = targets.pec$Group,
title="Datos crudos", scale = FALSE, size = 3.5,
colores = c("darkred", "salmon", "darkgreen", "springgreen2"))
library(ecoli2.db)
geneSymbols <- select(ecoli2.db, rownames(fit.main.pec), c("SYMBOL"))
SYMBOLS <- geneSymbols$SYMBOL
volcanoplot(fit.main.pec, coef=1, highlight=4, names=SYMBOLS, main=paste("Genes diferencialmente expresados", colnames(Matcontrast)[1], sep="\n"), hl.col="deepskyblue4", col=c("darkorange"), cex.main = 1, cex.lab = 0.9)
abline(v=c(-1,1))
probesInHeatmap.pec <- rownames(res.selected.pec)
DatosHM <- exprs(eset_filtered.pec)[rownames(exprs(eset_filtered.pec)) %in% probesInHeatmap.pec,]
geneSymbols <- select(ecoli2.db, rownames(DatosHM), c("SYMBOL"))
SYMBOLS<- geneSymbols$SYMBOL
rownames(DatosHM) <- SYMBOLS
write.csv(DatosHM, file = file.path("./Resultados/DatosHM.csv"))
my_palette <- colorRampPalette(c("lightcyan", "deepskyblue4"))(n = 299)
library(gplots)
heatmap.2(DatosHM,
Rowv = FALSE,
Colv = FALSE,
main = "Genes diferencialmente expresados \n FDR<0,1, logFC >=1",
scale = "row",
col = my_palette,
sepcolor = "white",
sepwidth = c(0.05,0.05),
cexRow = 0.5,
cexCol = 0.9,
key = TRUE,
keysize = 1.5,
density.info = "histogram",
ColSideColors = c(rep("springgreen",2),rep("darkgreen",2), rep("salmon",2), rep("darkred",2)),
tracecol = NULL,
dendrogram = "none",
srtCol = 30)
